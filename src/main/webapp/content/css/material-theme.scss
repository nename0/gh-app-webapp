@import '@angular/material/theming'; 

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue.
$my-theme-primary:mat-palette($mat-indigo);
$my-theme-accent: mat-palette($mat-grey, 50, A100, 100);

// create theme (use mat-dark-theme for themes with dark backgrounds)
$my-theme: mat-light-theme(
    $my-theme-primary,
    $my-theme-accent
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($my-theme);

mat-nav-list > a:not(.router-active) mat-icon {
    color: rgba(0,0,0,.54);
}

mat-nav-list > a.router-active mat-icon{
    color: mat-color($my-theme-primary);
}

mat-nav-list > a.router-active .mat-line{
    color: mat-color($my-theme-primary);
}

.navbar-toolbar.mat-accent {
    background: mat-color($my-theme-accent, "lighter");
}

span.settings-warn-text {
    color: mat-color(map-get($my-theme, warn), "default");
}

// Command to compile: 
// .\node_modules\.bin\node-sass .\src\main\webapp\content\css\material-theme.scss --include-path .\node_modules\ .\src\main\webapp\content\css\material-theme.css